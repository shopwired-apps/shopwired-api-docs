openapi: 3.1.0
info:
  title: Themes
  description: API endpoints for managing themes.
  version: "1.1.0"

servers:
  - url: https://api.ecommerceapi.uk/v1
    description: Production API server

paths:
  /themes:
    get:
      summary: List themes
      description: "Retrieves a list of themes with pagination."
      operationId: listThemes
      security:
        - BasicAuth: []
      parameters:
        - name: count
          in: query
          description: "Number of records to retrieve (default: 50, max: 100)."
          required: false
          schema:
            type: integer
            default: 50
            maximum: 100
        - name: offset
          in: query
          description: "Number of records to skip."
          required: false
          schema:
            type: integer
            default: 0
        - name: sort
          in: query
          description: "Sorting order for the results. Defaults to no sorting."
          required: false
          schema:
            type: string
            enum:
              - created
              - created_asc
              - created_desc
            example: "created_desc"
        - name: fields
          in: query
          description: "Comma-separated list of fields to include in the response."
          required: false
          schema:
            type: string
      responses:
        "200":
          description: "A list of themes."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Theme"
        "401":
          description: "Unauthorized. Invalid or missing API key."
        "500":
          description: "Server error."

  /themes/count:
    get:
      summary: Get total theme count
      description: "Retrieves the total number of themes."
      operationId: getThemeCount
      security:
        - BasicAuth: []
      responses:
        "200":
          description: "The total count of themes."
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: "The total number of themes."
                    example: 42
        "401":
          description: "Unauthorized. Invalid or missing API key."
        "500":
          description: "Server error."

  /themes/{id}:
    get:
      summary: Get a specific theme
      description: "Retrieves details of a single theme by ID."
      operationId: getThemeById
      security:
        - BasicAuth: []
      parameters:
        - name: id
          in: path
          description: "The unique identifier of the theme."
          required: true
          schema:
            type: integer
        - name: fields
          in: query
          description: "Comma-separated list of fields to include in the response."
          required: false
          schema:
            type: string
      responses:
        "200":
          description: "The theme details."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Theme"
        "401":
          description: "Unauthorized. Invalid or missing API key."
        "404":
          description: "Theme not found."
        "500":
          description: "Server error."

    put:
      summary: Update a theme
      description: "Updates an existing theme."
      operationId: updateTheme
      security:
        - BasicAuth: []
      parameters:
        - name: id
          in: path
          description: "The unique identifier of the theme."
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ThemeUpdate"
      responses:
        "200":
          description: "Theme updated successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Theme"
        "400":
          description: "Invalid request data."
        "401":
          description: "Unauthorized. Invalid or missing API key."
        "404":
          description: "Theme not found."
        "500":
          description: "Server error."

components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic

  schemas:
    Theme:
      type: object
      properties:
        id:
          type: integer
          description: "Unique identifier for the theme."
        createdAt:
          type: string
          format: date-time
          description: "Timestamp when the theme was created."
        title:
          type: string
          description: "The name/title of the theme."
        live:
          type: boolean
          description: "Indicates whether the theme is currently live."
        previewUrl:
          type: string
          format: uri
          description: "The URL for the theme preview."

    ThemeUpdate:
      type: object
      required:
        - title
      properties:
        title:
          type: string
          description: "The updated name/title of the theme."
