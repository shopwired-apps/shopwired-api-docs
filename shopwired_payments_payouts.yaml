openapi: 3.1.0
info:
  title: ShopWired Payments Payouts
  description: API endpoints for managing payouts through ShopWired Payments.
  version: "1.1.0"
  
servers:
  - url: https://api.ecommerceapi.uk/v1
    description: Production API server

paths:
  /shopwired-payments/payouts:
    get:
      summary: List payouts
      description: "Retrieves a list of payouts with pagination."
      operationId: listPayouts
      security:
        - BasicAuth: []
      parameters:
        - name: count
          in: query
          description: "Number of records to retrieve (default: 50, max: 100)."
          required: false
          schema:
            type: integer
            default: 50
            maximum: 100
        - name: offset
          in: query
          description: "Number of records to skip."
          required: false
          schema:
            type: integer
            default: 0
        - name: sort
          in: query
          description: "Sorting order for the results. Defaults to no sorting."
          required: false
          schema:
            type: string
            enum:
              - created
              - created_asc
              - created_desc
            example: "created_desc"
        - name: fields
          in: query
          description: "Comma-separated list of fields to include in the response."
          required: false
          schema:
            type: string
      responses:
        "200":
          description: "A list of payouts."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Payout"
        "400":
          description: "Invalid request parameters."
        "401":
          description: "Unauthorized. Invalid or missing API key."
        "500":
          description: "Server error."

  /shopwired-payments/payouts/{payout_id}:
    get:
      summary: Get a specific payout
      description: "Retrieves a single payout by ID."
      operationId: getPayoutById
      security:
        - BasicAuth: []
      parameters:
        - name: payout_id
          in: path
          description: "The unique identifier of the payout."
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-separated list of fields to include in the response."
          required: false
          schema:
            type: string
      responses:
        "200":
          description: "The payout details."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Payout"
        "400":
          description: "Invalid request parameters."
        "401":
          description: "Unauthorized. Invalid or missing API key."
        "404":
          description: "Payout not found."
        "500":
          description: "Server error."

  /shopwired-payments/payouts/count:
    get:
      summary: Get total payout count
      description: "Retrieves the total number of payouts."
      operationId: getPayoutCount
      security:
        - BasicAuth: []
      responses:
        "200":
          description: "The total count of payouts."
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: "The total number of payouts."
                    example: 207
        "400":
          description: "Invalid request parameters."
        "401":
          description: "Unauthorized. Invalid or missing API key."
        "500":
          description: "Server error."

components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic

  schemas:
    Payout:
      type: object
      properties:
        id:
          type: string
          description: "Unique identifier for the payout."
        createdAt:
          type: string
          format: date-time
          description: "Timestamp when the payout was created."
        status:
          type: string
          enum: [pending, in_transit, failed, paid]
          description: "Current status of the payout."
        automatic:
          type: boolean
          description: "Indicates whether the payout was initiated automatically."
        expectedBy:
          type: string
          format: date-time
          description: "Expected arrival date of the payout."
        destination:
          type: object
          description: "Details of the payout destination."
          properties:
            type:
              type: string
              description: "Type of destination (e.g., bank_account)."
            name:
              type: string
              description: "Name of the bank or institution receiving the payout."
            number:
              type: string
              description: "Last four digits of the receiving account number."
