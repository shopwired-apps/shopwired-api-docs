openapi: 3.1.0
info:
  title: Product Reviews
  description: API endpoints for managing product reviews.
  version: "1.1.0"

servers:
  - url: https://api.ecommerceapi.uk/v1
    description: Production API server

paths:
  /products/{product_id}/reviews:
    get:
      summary: List product reviews
      description: "Retrieves a list of product reviews for a specified product with pagination and sorting."
      operationId: listProductReviews
      security:
        - BasicAuth: []
      parameters:
        - name: product_id
          in: path
          description: "The unique identifier of the product."
          required: true
          schema:
            type: integer
        - name: count
          in: query
          description: "Number of records to retrieve (default: 50, max: 100)."
          required: false
          schema:
            type: integer
            default: 50
            maximum: 100
        - name: offset
          in: query
          description: "Number of records to skip."
          required: false
          schema:
            type: integer
            default: 0
        - name: sort
          in: query
          description: "Sorting order for the results. Defaults to no sorting."
          required: false
          schema:
            type: string
            enum:
              - created
              - created_asc
              - created_desc
            example: "created_desc"
        - name: fields
          in: query
          description: "Comma-separated list of fields to include in the response."
          required: false
          schema:
            type: string
      responses:
        "200":
          description: "A list of product reviews."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductReview"
        "400":
          description: "Invalid request parameters."
        "401":
          description: "Unauthorized. Invalid or missing API key."
        "500":
          description: "Server error."

    post:
      summary: Create a product review
      description: "Creates a new review for a specified product."
      operationId: createProductReview
      security:
        - BasicAuth: []
      parameters:
        - name: product_id
          in: path
          description: "The unique identifier of the product."
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductReviewCreate"
      responses:
        "200":
          description: "Product review created successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductReview"
        "400":
          description: "Invalid request data."
        "401":
          description: "Unauthorized. Invalid or missing API key."
        "500":
          description: "Server error."

  /products/{product_id}/reviews/{id}:
    put:
      summary: Update a product review
      description: "Updates an existing product review."
      operationId: updateProductReview
      security:
        - BasicAuth: []
      parameters:
        - name: product_id
          in: path
          description: "The unique identifier of the product."
          required: true
          schema:
            type: integer
        - name: id
          in: path
          description: "The unique identifier of the review."
          required: true
          schema:
            type: integer
        - name: fields
          in: query
          description: "Comma-separated list of fields to include in the response."
          required: false
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductReviewUpdate"
      responses:
        "200":
          description: "Product review updated successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductReview"
        "400":
          description: "Invalid request data."
        "401":
          description: "Unauthorized. Invalid or missing API key."
        "404":
          description: "Review not found."
        "500":
          description: "Server error."

    delete:
      summary: Delete a product review
      description: "Deletes a specific product review."
      operationId: deleteProductReview
      security:
        - BasicAuth: []
      parameters:
        - name: product_id
          in: path
          description: "The unique identifier of the product."
          required: true
          schema:
            type: integer
        - name: id
          in: path
          description: "The unique identifier of the review."
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: "Product review deleted successfully."
        "400":
          description: "Invalid request parameters."
        "401":
          description: "Unauthorized. Invalid or missing API key."
        "404":
          description: "Review not found."
        "500":
          description: "Server error."

components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic

  schemas:
    ProductReview:
      type: object
      properties:
        id:
          type: integer
          description: "Unique identifier for the product review."
        createdAt:
          type: string
          format: date-time
          description: "Timestamp when the review was created."
        name:
          type: string
          description: "The name of the customer who added the review."
        content:
          type: string
          description: "The content of the review."
        rating:
          type: integer
          description: "The review rating (between 1 and 5)."
          minimum: 1
          maximum: 5
        active:
          type: boolean
          description: "Indicates whether the review is displayed."

    ProductReviewCreate:
      type: object
      required:
        - name
        - content
        - rating
      properties:
        name:
          type: string
          description: "The name of the customer who added the review."
        content:
          type: string
          description: "The content of the review."
        rating:
          type: integer
          description: "The review rating (between 1 and 5)."
          minimum: 1
          maximum: 5
        active:
          type: boolean
          description: "Indicates whether the review should be displayed."
          default: true

    ProductReviewUpdate:
      type: object
      properties:
        name:
          type: string
          description: "Updated name of the customer who added the review."
        content:
          type: string
          description: "Updated content of the review."
        rating:
          type: integer
          description: "Updated review rating (between 1 and 5)."
          minimum: 1
          maximum: 5
        active:
          type: boolean
          description: "Indicates whether the review should be displayed."
