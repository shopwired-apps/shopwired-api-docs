openapi: 3.1.0
info:
  title: Product Choices
  description: API endpoints for assigning and managing product choices (custom options) for products, including custom pricing.
  version: "1.0.0"

servers:
  - url: https://api.ecommerceapi.uk/v1
    description: Production API server

paths:
  /products/{product_id}/choices:
    get:
      summary: List product choices
      description: "Retrieves all choices (custom options) assigned to a product."
      operationId: listProductChoices
      security:
        - BasicAuth: []
      parameters:
        - name: product_id
          in: path
          required: true
          description: "ID of the product."
          schema:
            type: integer
      responses:
        "200":
          description: "A list of product choices."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProductChoice"
        "401":
          description: "Unauthorized."
        "404":
          description: "Product not found."

    post:
      summary: Assign a choice to a product
      description: "Assigns a choice (set + value) to a product, with optional custom price and cost price."
      operationId: assignProductChoice
      security:
        - BasicAuth: []
      parameters:
        - name: product_id
          in: path
          required: true
          description: "ID of the product."
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductChoiceCreate"
      responses:
        "201":
          description: "Product choice assigned successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductChoice"
        "400":
          description: "Invalid request data."
        "401":
          description: "Unauthorized."
        "404":
          description: "Product or choice set/value not found."
        "422":
          description: "Validation error."

  /products/{product_id}/choices/{id}:
    get:
      summary: Get a product choice
      description: "Retrieves a single product choice assigned to a product."
      operationId: getProductChoice
      security:
        - BasicAuth: []
      parameters:
        - name: product_id
          in: path
          required: true
          description: "ID of the product."
          schema:
            type: integer
        - name: id
          in: path
          required: true
          description: "ID of the product choice."
          schema:
            type: integer
      responses:
        "200":
          description: "The product choice details."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductChoice"
        "401":
          description: "Unauthorized."
        "404":
          description: "Product or product choice not found."

    put:
      summary: Update a product choice
      description: "Updates the custom price and/or cost price for a product choice."
      operationId: updateProductChoice
      security:
        - BasicAuth: []
      parameters:
        - name: product_id
          in: path
          required: true
          description: "ID of the product."
          schema:
            type: integer
        - name: id
          in: path
          required: true
          description: "ID of the product choice."
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductChoiceUpdate"
      responses:
        "200":
          description: "Product choice updated successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductChoice"
        "400":
          description: "Invalid request data."
        "401":
          description: "Unauthorized."
        "404":
          description: "Product or product choice not found."
        "422":
          description: "Validation error."

    delete:
      summary: Delete a product choice
      description: "Removes a choice from a product."
      operationId: deleteProductChoice
      security:
        - BasicAuth: []
      parameters:
        - name: product_id
          in: path
          required: true
          description: "ID of the product."
          schema:
            type: integer
        - name: id
          in: path
          required: true
          description: "ID of the product choice."
          schema:
            type: integer
      responses:
        "204":
          description: "Product choice deleted successfully."
        "401":
          description: "Unauthorized."
        "404":
          description: "Product or product choice not found."

components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic

  schemas:
    ProductChoice:
      type: object
      properties:
        id:
          type: integer
          description: "Unique ID of the product choice."
        set:
          type: object
          description: "The choice set."
          properties:
            id:
              type: integer
              description: "ID of the choice set."
            name:
              type: string
              description: "Name of the choice set."
        value:
          type: object
          description: "The value from the choice set."
          properties:
            id:
              type: integer
              description: "ID of the choice value."
            name:
              type: string
              description: "Name of the choice value."
        customPrice:
          type: number
          format: float
          description: "Custom price for this product choice (overrides default)."
        costPrice:
          type: number
          format: float
          description: "Custom cost price for this product choice."

    ProductChoiceCreate:
      type: object
      required:
        - set
        - value
      properties:
        set:
          type: integer
          description: "ID of the choice set."
        value:
          type: integer
          description: "ID of the choice value."
        customPrice:
          type: number
          format: float
          description: "Custom price for this product choice (optional)."
        costPrice:
          type: number
          format: float
          description: "Custom cost price for this product choice (optional)."

    ProductChoiceUpdate:
      type: object
      properties:
        customPrice:
          type: number
          format: float
          description: "Custom price for this product choice. Set to -1 to remove an existing price."
        costPrice:
          type: number
          format: float
          description: "Custom cost price for this product choice. Set to -1 to remove an existing price."