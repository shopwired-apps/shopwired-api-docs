openapi: 3.1.0
info:
  title: ShopWired Payments Transactions
  description: API endpoints for retrieving transaction data from ShopWired Payments.
  version: "1.1.0"

servers:
  - url: https://api.ecommerceapi.uk/v1
    description: Production API server

paths:
  /shopwired-payments/transactions:
    get:
      summary: List transactions
      description: "Retrieves a list of successful transactions with pagination."
      operationId: listTransactions
      security:
        - BasicAuth: []
      parameters:
        - name: count
          in: query
          description: "Number of records to retrieve (default: 50, max: 100)."
          required: false
          schema:
            type: integer
            default: 50
            maximum: 100
        - name: offset
          in: query
          description: "Number of records to skip."
          required: false
          schema:
            type: integer
            default: 0
        - name: sort
          in: query
          description: "Sorting order for the results."
          required: false
          schema:
            type: string
            enum:
              - created
              - created_asc
              - created_desc
            example: "created_desc"
        - name: fields
          in: query
          description: "Comma-separated list of fields to include in the response."
          required: false
          schema:
            type: string
      responses:
        "200":
          description: "A list of transactions."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
        "400":
          description: "Invalid request parameters."
        "401":
          description: "Unauthorized. Invalid or missing API key."
        "500":
          description: "Server error."

  /shopwired-payments/transactions/{transaction_id}:
    get:
      summary: Get a specific transaction
      description: "Retrieves detailed information about a specific transaction."
      operationId: getTransactionById
      security:
        - BasicAuth: []
      parameters:
        - name: transaction_id
          in: path
          description: "The unique identifier of the transaction."
          required: true
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-separated list of fields to include in the response."
          required: false
          schema:
            type: string
      responses:
        "200":
          description: "The transaction details."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionDetails"
        "400":
          description: "Invalid request parameters."
        "401":
          description: "Unauthorized. Invalid or missing API key."
        "404":
          description: "Transaction not found."
        "500":
          description: "Server error."

  /shopwired-payments/transactions/count:
    get:
      summary: Get total transaction count
      description: "Retrieves the total number of successful transactions."
      operationId: getTransactionCount
      security:
        - BasicAuth: []
      responses:
        "200":
          description: "The total count of transactions."
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: "The total number of successful transactions."
                    example: 1247
        "400":
          description: "Invalid request parameters."
        "401":
          description: "Unauthorized. Invalid or missing API key."
        "500":
          description: "Server error."

components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic

  schemas:
    Transaction:
      type: object
      description: "Basic transaction details."
      properties:
        id:
          type: string
          description: "Unique identifier for the transaction."
        createdAt:
          type: string
          format: date-time
          description: "Timestamp when the transaction was created."
        amount:
          type: integer
          description: "Transaction amount in minor currency units (e.g. pence)."
        currency:
          type: string
          description: "Three-letter ISO currency code."
          example: "GBP"
        orderId:
          type: string
          nullable: true
          description: "Associated order ID, if available."

    TransactionDetails:
      allOf:
        - $ref: "#/components/schemas/Transaction"
        - type: object
          description: "Detailed transaction information."
          properties:
            paymentType:
              type: string
              description: "Type of payment used."
            description:
              type: string
              description: "Transaction description."
            statementDescriptor:
              type: string
              description: "Text that appears on the customerâ€™s bank statement."
            feeAmount:
              type: integer
              description: "Total fee amount in minor currency units."
            refundedAmount:
              type: integer
              description: "Total refunded amount in minor currency units."
            fraudulent:
              type: boolean
              description: "Indicates whether the transaction was flagged as fraudulent."
            riskLevel:
              type: string
              description: "Risk assessment level."
            customer:
              type: object
              description: "Customer details for the transaction."
              properties:
                name:
                  type: string
                phoneNumber:
                  type: string
                emailAddress:
                  type: string
                address:
                  type: object
                  properties:
                    line1:
                      type: string
                    line2:
                      type: string
                    city:
                      type: string
                    state:
                      type: string
                    postalCode:
                      type: string
                    country:
                      type: string
            card:
              type: object
              description: "Card details used for the transaction, if applicable."
              properties:
                country:
                  type: string
                brand:
                  type: string
                funding:
                  type: string
                expirationMonth:
                  type: integer
                expirationYear:
                  type: integer
                cvcCheckResult:
                  type: string
                postalCodeCheckResult:
                  type: string
                threeDSecureResult:
                  type: string
                walletType:
                  type: string
