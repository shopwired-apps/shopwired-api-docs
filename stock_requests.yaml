openapi: 3.1.0
info:
  title: Stock Requests
  description: API endpoint for retrieving stock requests submitted by customers through the back in stock notification form.
  version: "1.0.0"

servers:
  - url: https://api.ecommerceapi.uk/v1
    description: Production API server

paths:
  /stock-requests:
    get:
      summary: List stock requests
      description: "Retrieves all stock requests submitted by customers via the storefront back in stock notification form."
      operationId: listStockRequests
      security:
        - BasicAuth: []
      parameters:
        - name: count
          in: query
          description: "Maximum number of results to return (default: 50, max: 100)."
          required: false
          schema:
            type: integer
            default: 50
            maximum: 100
        - name: offset
          in: query
          description: "Starting position for returned results."
          required: false
          schema:
            type: integer
            default: 0
        - name: sort
          in: query
          description: "Sort order for results. Defaults to creation date descending."
          required: false
          schema:
            type: string
            enum: [created, created_asc, created_desc]
        - name: fields
          in: query
          description: "Comma-separated list of properties to include in the response."
          required: false
          schema:
            type: string
            example: "id,emailAddress,productId,sku,createdAt"
      responses:
        "200":
          description: "A list of stock requests."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StockRequest"
        "400":
          description: "Invalid request parameters."
        "401":
          description: "Unauthorized. Invalid or missing API key."
        "500":
          description: "Server error."

components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic

  schemas:
    StockRequest:
      type: object
      properties:
        id:
          type: integer
          description: "Unique identifier for the stock request."
        emailAddress:
          type: string
          description: "The email address provided by the customer."
        name:
          type: string
          description: "The name entered by the customer (if applicable)."
        productId:
          type: integer
          description: "The ID of the product the customer wants to be notified about."
        sku:
          type: string
          description: "The SKU of the product (if applicable)."
        createdAt:
          type: string
          format: date-time
          description: "The date and time when the stock request was created."
