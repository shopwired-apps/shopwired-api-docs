openapi: 3.1.0
info:
  title: Gift Cards
  description: API endpoints for managing gift cards in ShopWired.
  version: "1.0.9"

servers:
  - url: https://api.ecommerceapi.uk/v1
    description: Production API server

paths:
  /gift-vouchers:
    get:
      summary: List gift cards
      description: "Retrieves a list of gift cards with pagination."
      operationId: listGiftCards
      security:
        - BasicAuth: []
      parameters:
        - name: count
          in: query
          description: "Number of records to retrieve (default: 50, max: 100)."
          required: false
          schema:
            type: integer
            default: 50
            maximum: 100
        - name: offset
          in: query
          description: "Number of records to skip."
          required: false
          schema:
            type: integer
            default: 0
        - name: fields
          in: query
          description: "Comma-separated list of fields to include in the response."
          required: false
          schema:
            type: string
      responses:
        "200":
          description: "A list of gift cards."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GiftCard"
        "400":
          description: "Invalid request parameters."
        "401":
          description: "Unauthorized. Invalid or missing API key."
        "500":
          description: "Server error."

    post:
      summary: Create a gift card
      description: "Creates a new gift card."
      operationId: createGiftCard
      security:
        - BasicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GiftCardCreate"
      responses:
        "201":
          description: "Gift card created successfully."
        "400":
          description: "Invalid request data."
        "401":
          description: "Unauthorized. Invalid or missing API key."
        "500":
          description: "Server error."

  /gift-vouchers/count:
    get:
      summary: Get total gift card count
      description: "Retrieves the total number of gift cards."
      operationId: getGiftCardCount
      security:
        - BasicAuth: []
      responses:
        "200":
          description: "The total count of gift cards."
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: "The total number of gift cards."
                    example: 100
        "400":
          description: "Invalid request parameters."
        "401":
          description: "Unauthorized. Invalid or missing API key."
        "500":
          description: "Server error."

  /gift-vouchers/{id}:
    get:
      summary: Get a specific gift card
      description: "Retrieves a single gift card by ID."
      operationId: getGiftCardById
      security:
        - BasicAuth: []
      parameters:
        - name: id
          in: path
          description: "The unique identifier of the gift card."
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: "The gift card details."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GiftCard"
        "400":
          description: "Invalid request parameters."
        "401":
          description: "Unauthorized. Invalid or missing API key."
        "404":
          description: "Gift card not found."
        "500":
          description: "Server error."

    put:
      summary: Update a gift card
      description: "Updates an existing gift card by ID."
      operationId: updateGiftCard
      security:
        - BasicAuth: []
      parameters:
        - name: id
          in: path
          description: "The unique identifier of the gift card."
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GiftCardUpdate"
      responses:
        "200":
          description: "Gift card updated successfully."
        "400":
          description: "Invalid request data."
        "401":
          description: "Unauthorized. Invalid or missing API key."
        "404":
          description: "Gift card not found."
        "500":
          description: "Server error."

    delete:
      summary: Delete a gift card
      description: "Deletes an existing gift card by ID."
      operationId: deleteGiftCard
      security:
        - BasicAuth: []
      parameters:
        - name: id
          in: path
          description: "The unique identifier of the gift card."
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: "Gift card deleted successfully."
        "400":
          description: "Invalid request parameters."
        "401":
          description: "Unauthorized. Invalid or missing API key."
        "404":
          description: "Gift card not found."
        "500":
          description: "Server error."

components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic

  schemas:
    GiftCard:
      type: object
      properties:
        id:
          type: integer
          description: "Unique identifier for the gift card."
        code:
          type: string
          description: "The unique code of the gift card."
        amount:
          type: number
          format: float
          description: "The value of the gift card."
        amountUsed:
          type: number
          format: float
          description: "The amount of the gift card that has been used."

    GiftCardCreate:
      type: object
      required:
        - code
        - amount
        - amountUsed
      properties:
        code:
          type: string
          description: "The unique code of the gift card."
        amount:
          type: number
          format: float
          description: "The value of the gift card."
        amountUsed:
          type: number
          format: float
          description: "The amount of the gift card that has been used."

    GiftCardUpdate:
      type: object
      properties:
        code:
          type: string
          description: "The unique code of the gift card."
        amount:
          type: number
          format: float
          description: "The value of the gift card."
        amountUsed:
          type: number
          format: float
          description: "The amount of the gift card that has been used."
