openapi: 3.1.0
info:
  title: Vouchers
  description: API endpoints for managing vouchers.
  version: "1.0.5"

servers:
  - url: https://api.ecommerceapi.uk/v1
    description: Production API server

paths:
  /vouchers:
    get:
      summary: List vouchers
      description: "Retrieves a list of vouchers with pagination."
      operationId: listVouchers
      security:
        - BasicAuth: []
      parameters:
        - name: count
          in: query
          description: "Number of records to retrieve (default: 50, max: 100)."
          required: false
          schema:
            type: integer
            default: 50
            maximum: 100
        - name: offset
          in: query
          description: "Number of records to skip."
          required: false
          schema:
            type: integer
            default: 0
        - name: sort
          in: query
          description: "Sorting order for the results. Defaults to creation date."
          required: false
          schema:
            type: string
            enum:
              - code
              - code_desc
        - name: code
          in: query
          description: "Filter vouchers by code."
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: "Comma-separated list of fields to include in the response."
          required: false
          schema:
            type: string
        - name: embed
          in: query
          description: "Comma-separated list of related resources to embed in the response. Available values: `tags`."
          required: false
          schema:
            type: string
      responses:
        "200":
          description: "A list of vouchers."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Voucher"

    post:
      summary: Create a new voucher
      description: "Creates a new voucher."
      operationId: createVoucher
      security:
        - BasicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VoucherCreate"
      responses:
        "201":
          description: "Voucher created successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Voucher"

  /vouchers/count:
    get:
      summary: Get total voucher count
      description: "Retrieves the total number of vouchers."
      operationId: getVoucherCount
      security:
        - BasicAuth: []
      responses:
        "200":
          description: "The total count of vouchers."
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: "The total number of vouchers."

  /vouchers/{id}:
    get:
      summary: Get a specific voucher
      description: "Retrieves a single voucher by ID."
      operationId: getVoucherById
      security:
        - BasicAuth: []
      parameters:
        - name: id
          in: path
          description: "The unique identifier of the voucher."
          required: true
          schema:
            type: integer
        - name: fields
          in: query
          description: "Comma-separated list of fields to include in the response."
          required: false
          schema:
            type: string
      responses:
        "200":
          description: "The voucher details."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Voucher"

    put:
      summary: Update a voucher
      description: "Updates an existing voucher by ID."
      operationId: updateVoucher
      security:
        - BasicAuth: []
      parameters:
        - name: id
          in: path
          description: "The unique identifier of the voucher."
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VoucherUpdate"
      responses:
        "200":
          description: "Voucher updated successfully."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Voucher"

    delete:
      summary: Delete a voucher
      description: "Deletes an existing voucher by ID."
      operationId: deleteVoucher
      security:
        - BasicAuth: []
      parameters:
        - name: id
          in: path
          description: "The unique identifier of the voucher."
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: "Voucher deleted successfully."

components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic

  schemas:
    Voucher:
      type: object
      properties:
        id:
          type: integer
          description: "Unique identifier for the voucher."
        code:
          type: string
          description: "The voucher code."
        discount:
          type: object
          properties:
            type:
              type: string
              enum: [amount, percent, shipping]
              description: "Type of the discount."
            value:
              type: number
              description: "Value of the discount."
        validFrom:
          type: string
          description: "The date and time the voucher becomes valid."
        expiresOn:
          type: string
          description: "The date and time the voucher expires."
        target:
          type: object
          properties:
            type:
              type: string
              enum: [orders_over, category, brand, product]
              description: "The target type for the voucher."
            value:
              type: number
              description: "The target value for orders_over vouchers."
            ids:
              type: array
              items:
                type: integer
              description: "List of target IDs."
        active:
          type: boolean
          description: "Indicates whether the voucher is active."
        uses:
          type: integer
          description: "Total allowed uses for the voucher."
        used:
          type: integer
          description: "Number of times the voucher has been used."
        customerUses:
          type: integer
          description: "Number of times the voucher has been used by a customer."
        comments:
          type: string
          description: "Comments or notes for the voucher."
        dynamicAmount:
          type: boolean
          description: "Indicates if the discount amount is dynamic."
        automatic:
          type: boolean
          description: "Indicates if the voucher is automatically applied."
        tags:
          type: array
          items:
            type: string
          description: "Tags associated with the voucher."

    VoucherCreate:
      type: object
      properties:
        code:
          type: string
          description: "The voucher code."
        discount:
          type: object
          properties:
            type:
              type: string
              enum: [amount, percent, shipping]
              description: "Type of the discount."
            value:
              type: number
              description: "Value of the discount."
        validFrom:
          type: string
          description: "The date and time the voucher becomes valid."
        expiresOn:
          type: string
          description: "The date and time the voucher expires."
        target:
          type: object
          properties:
            type:
              type: string
              enum: [orders_over, category, brand, product]
              description: "The target type for the voucher."
            value:
              type: number
              description: "The target value for orders_over vouchers."
            ids:
              type: array
              items:
                type: integer
              description: "List of target IDs."
        active:
          type: boolean
          description: "Indicates whether the voucher is active."
        dynamicAmount:
          type: boolean
          description: "Indicates if the discount amount is dynamic."
        automatic:
          type: boolean
          description: "Indicates if the voucher is automatically applied."

    VoucherUpdate:
      allOf:
        - $ref: "#/components/schemas/VoucherCreate"
        - type: object
          properties:
            used:
              type: integer
              description: "Number of times the voucher has been used."
            comments:
              type: string
              description: "Comments or notes for the voucher."
